{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAa7C,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAIhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAfoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAOF,GAFL,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAM,CACJC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARjB,kBAWdM,GAXc,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACtC,OACE,sBAAKc,UAAU,6CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAe,IAAdnB,EAAa,EAAbA,SAAa,ECAV,SAACA,GAAa,IAAD,EACbd,mBAAS,CACjCqB,KAAK,GACLa,SAAQ,IAH6B,mBAChCC,EADgC,KACzBC,EADyB,KAgBvC,OAVAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAAAC,GACFH,EAAS,CACPf,KAAKkB,EACLL,SAAS,SAGjB,CAACpB,IAEIqB,EDdwBK,CAAa1B,GAAhCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAEpB,OACE,qCACE,oBAAIJ,UAAU,wCAAd,SAAuDhB,IACtDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAACC,GAAD,OACX,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEWPgB,EAvBM,WAAO,IAAD,EAEWzC,mBAAS,CAAC,cAFrB,mBAElB0C,EAFkB,KAEN3C,EAFM,KAIzB,OACE,qCACE,8CACE,cAAC,EAAD,CAAaA,cAAiBA,IAChC,uBACC,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAUA,GADLA,YCVd6B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OACP,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.39dfe339.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) =>{\r\n\r\n  const [inputValue, setinputValue] = useState('');\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    if (inputValue.trim().length>2) {\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setinputValue('');\r\n    }\r\n  }\r\n  return(\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type='text'\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) =>{\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=15&api_key=z5Rmo0i4q35Pnb0cjXzFLfZZyPL5CY1X`;\r\n  const resp = await fetch (url);\r\n  const {data} = await resp.json();\r\n  const gifs = data.map(img => {\r\n    return{\r\n      id:img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    }\r\n  });\r\n  return(gifs);\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInDown\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) =>{\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n\r\n  return(\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map( (img) => (\r\n           <GifGridItem\r\n             key={img.id}\r\n             {...img}\r\n           />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading:true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(imgs  =>{\r\n          setState({\r\n            data:imgs,\r\n            loading: false,\r\n          });\r\n      });\r\n  },[category]);\r\n\r\n  return state;\r\n\r\n};\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return(\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n        <AddCategory setCategories = {setCategories}/>\r\n      <hr/>\r\n       <ol>\r\n         {\r\n           categories.map( category => (\r\n             <GifGrid\r\n               key={category}\r\n               category={category}\r\n             />\r\n           ))\r\n         }\r\n       </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.scss';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(\n  <GifExpertApp />, divRoot\n);\n"],"sourceRoot":""}